document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("supportTickets"),t=document.getElementById("adminBadgeEmail"),n=document.getElementById("ticketSearch"),a=document.getElementById("closeReplyBtn"),s=document.getElementById("submitReplyBtn"),d=document.getElementById("replyModal"),i=document.getElementById("replyModalSubject"),l=document.getElementById("replyMessage"),o=document.getElementById("toast");let c=[],r=null;const u=["Open","Pending","Resolved"],m=async()=>{try{const e=await fetch("/api/support",{credentials:"include"});if(!e.ok)throw new Error;if(c=await e.json(),!Array.isArray(c))throw new Error;c[0]?.business_email&&(t.textContent=c[0].business_email),p(c)}catch{e.innerHTML='<p class="text-red-600 text-center">❌ Failed to load tickets</p>'}},p=t=>{t.length?(e.innerHTML=t.map(e=>`\n      <div class="ticket bg-white border p-6 rounded-xl shadow-sm mb-6" data-id="${e.id}">\n        <div class="flex justify-between mb-2">\n          <div>\n            <h2 class="editable font-semibold text-blue-800 text-lg cursor-pointer" data-id="${e.id}" data-field="subject">\n              ${e.subject}\n            </h2>\n            <p class="text-xs text-gray-500">${new Date(e.created_at).toLocaleString()}</p>\n          </div>\n          <span class="editable bg-blue-100 text-blue-800 text-xs font-semibold px-2 py-1 rounded-full cursor-pointer"\n                data-id="${e.id}" data-field="status">\n            ${e.status||"Open"}\n          </span>\n        </div>\n\n        <p class="editable text-sm text-gray-800 p-3 bg-gray-50 rounded-md hover:bg-gray-100 cursor-pointer mt-2"\n           data-id="${e.id}" data-field="message">\n          ${e.message}\n        </p>\n\n        <p class="text-xs text-gray-600 mt-3">\n          👤 ${e.user_name||"Unknown"} &lt;${e.user_email}&gt;\n        </p>\n\n        <div class="flex gap-3 justify-end mt-4 text-sm">\n          <button class="replyBtn bg-blue-100 text-blue-800 px-4 py-1.5 rounded-full" data-id="${e.id}"\n                  data-subject="${encodeURIComponent(e.subject)}"\n                  data-email="${encodeURIComponent(e.user_email)}">✉️ Reply</button>\n          <button class="resolveBtn bg-green-100 text-green-800 px-4 py-1.5 rounded-full" data-id="${e.id}">✅ Resolve</button>\n          <button class="deleteBtn bg-red-100 text-red-700 px-4 py-1.5 rounded-full" data-id="${e.id}">🗑 Delete</button>\n        </div>\n      </div>\n    `).join(""),y()):e.innerHTML='<p class="text-center text-gray-400">No tickets found.</p>'},y=()=>{document.querySelectorAll(".replyBtn").forEach(e=>e.addEventListener("click",()=>g(e.dataset.id,decodeURIComponent(e.dataset.subject),decodeURIComponent(e.dataset.email)))),document.querySelectorAll(".resolveBtn").forEach(e=>e.addEventListener("click",()=>h(`/api/support/${e.dataset.id}/resolve`,"PATCH","✅ Ticket resolved"))),document.querySelectorAll(".deleteBtn").forEach(e=>e.addEventListener("click",()=>confirm("Delete this ticket?")&&h(`/api/support/${e.dataset.id}`,"DELETE","🗑️ Ticket deleted"))),document.querySelectorAll(".editable").forEach(e=>{e.addEventListener("click",()=>{if(e.classList.contains("editing"))return;e.classList.add("editing");const{id:t,field:n}=e.dataset,a=e.textContent.trim(),s=document.createElement("div");let d;s.className="space-y-2","status"===n?(d=document.createElement("select"),u.forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e,e===a&&(t.selected=!0),d.appendChild(t)})):(d=document.createElement("message"===n?"textarea":"input"),d.value=a),d.className="w-full text-sm p-3 border rounded-md";const i=document.createElement("button");i.textContent="💾 Save",i.className="bg-blue-600 text-white px-4 py-1 text-sm rounded shadow",s.append(d,i),e.replaceWith(s),d.focus();const l=()=>{s.replaceWith(e),e.classList.remove("editing"),y()};i.addEventListener("click",async()=>{const o=d.value.trim();if(!o||o===a)return l();i.disabled=!0,i.textContent="Saving...";try{if(!(await fetch(`/api/support/${t}/edit`,{method:"PATCH",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({field:n,value:o})})).ok)throw new Error;const a=document.createElement(e.tagName.toLowerCase());a.className=e.className,a.dataset.id=t,a.dataset.field=n,a.textContent=o,a.classList.add("highlight-success"),s.replaceWith(a),setTimeout(()=>a.classList.remove("highlight-success"),1200),y(),f("✅ Ticket updated")}catch{f("❌ Update failed"),l()}}),d.addEventListener("keydown",e=>{"Escape"===e.key&&l()})})})},g=(e,t,n)=>{r=e,l.value="",d.classList.remove("hidden"),i.textContent=`Subject: ${t} | To: ${n}`},b=()=>{r=null,d.classList.add("hidden")},h=async(e,t,n)=>{try{if(!(await fetch(e,{method:t,credentials:"include"})).ok)throw new Error;f(n),m()}catch{f("❌ Action failed")}},f=e=>{o.textContent=e,o.classList.remove("opacity-0"),o.classList.add("opacity-100"),setTimeout(()=>{o.classList.remove("opacity-100"),o.classList.add("opacity-0")},3e3)};a?.addEventListener("click",b),s?.addEventListener("click",async()=>{const e=l.value.trim();if(!e)return f("❌ Message is required");try{if(!(await fetch(`/api/support/${r}/reply`,{method:"POST",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({message:e})})).ok)throw new Error;f("✅ Reply sent"),b(),m()}catch{f("❌ Failed to send reply")}}),n?.addEventListener("input",()=>{const e=n.value.toLowerCase(),t=c.filter(t=>t.subject.toLowerCase().includes(e)||t.message.toLowerCase().includes(e)||t.user_email.toLowerCase().includes(e));p(t)}),m()});