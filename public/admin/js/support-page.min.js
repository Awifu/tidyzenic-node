document.addEventListener("DOMContentLoaded",async()=>{const e=document.getElementById("supportTickets"),t=document.getElementById("adminBadgeEmail"),s=document.getElementById("ticketSearch"),a=document.getElementById("toast");let n=[];e.innerHTML='<p class="text-gray-500 text-center">Loading tickets...</p>';try{const a=await fetch("/api/support",{credentials:"include"});if(!a.ok)throw new Error("Failed to fetch tickets");const d=await a.json();if(!Array.isArray(d))return void(e.innerHTML='<p class="text-red-600 text-center">❌ Invalid response format.</p>');if(0===d.length)return void(e.innerHTML='<p class="text-center text-gray-500">No support tickets found.</p>');n=d,d[0].business_email&&t&&(t.textContent=d[0].business_email),i(n),s?.addEventListener("input",()=>{const e=s.value.toLowerCase();i(n.filter(t=>t.subject.toLowerCase().includes(e)||t.message.toLowerCase().includes(e)||t.user_email.toLowerCase().includes(e)))})}catch(t){console.error("❌ Support fetch error:",t),e.innerHTML='<p class="text-red-600 text-center">❌ Could not load support tickets.</p>'}function i(t){e.innerHTML=t.map(e=>`\n      <div class="ticket p-4 border rounded-lg mb-4 shadow" data-id="${e.id}">\n        <div class="flex justify-between items-center mb-2">\n          <h3 class="editable font-semibold text-blue-800" data-field="subject" data-id="${e.id}">${e.subject}</h3>\n          <span class="editable px-2 py-1 text-xs font-semibold rounded bg-blue-100 text-blue-700" data-field="status" data-id="${e.id}">\n            ${e.status}\n          </span>\n        </div>\n        <p class="text-sm text-gray-600 mb-1">${new Date(e.created_at).toLocaleString()}</p>\n        <p class="editable text-sm bg-gray-100 p-2 rounded" data-field="message" data-id="${e.id}">${e.message}</p>\n        <div class="text-xs text-gray-500 mt-2">From: ${e.user_name||"Unknown"} (${e.user_email})</div>\n      </div>\n    `).join(""),d()}function d(){document.querySelectorAll(".editable").forEach(e=>{e.addEventListener("click",()=>{if(e.classList.contains("editing"))return;e.classList.add("editing");const t=e.dataset.field,s=e.dataset.id,a=e.textContent,n="status"===t?document.createElement("select"):document.createElement("textarea");"status"===t?["Open","Replied","Resolved"].forEach(e=>{const t=document.createElement("option");t.value=t.text=e,e===a&&(t.selected=!0),n.appendChild(t)}):n.value=a,n.className="w-full p-2 border rounded mt-1 text-sm",e.replaceWith(n),n.focus();const i=async()=>{const i="status"===t?n.value:n.value.trim();if(!i||i===a)return n.replaceWith(e),void e.classList.remove("editing");try{if(!(await fetch(`/api/support/${s}/edit`,{method:"PATCH",headers:{"Content-Type":"application/json"},credentials:"include",body:JSON.stringify({field:t,value:i})})).ok)throw new Error;const a=document.createElement(e.tagName.toLowerCase());a.className=e.className,a.dataset.id=s,a.dataset.field=t,a.textContent=i,a.classList.add("highlight-success"),n.replaceWith(a),c("✅ Updated successfully"),setTimeout(()=>a.classList.remove("highlight-success"),1e3),d()}catch{c("❌ Update failed"),n.replaceWith(e)}};n.addEventListener("blur",()=>i()),n.addEventListener("keydown",s=>{"Enter"===s.key&&"status"!==t?(s.preventDefault(),i()):"Escape"===s.key&&n.replaceWith(e)})})})}function c(e){a&&(a.textContent=e,a.classList.remove("opacity-0"),a.classList.add("opacity-100"),setTimeout(()=>{a.classList.add("opacity-0")},3e3))}});